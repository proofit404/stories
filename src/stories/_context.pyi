from typing import Any, Callable, Dict, List, Union

from stories._contract import NullContract, SpecContract
from stories._history import History

def assign_namespace(
    ctx: Context, method: Callable, kwargs: Dict[str, Any]
) -> None: ...
def context_representation(ctx: Context, repr_func: Callable = ...) -> str: ...
def history_representation(ctx: Context) -> str: ...
def make_context(
    contract: Union[SpecContract, NullContract],
    kwargs: Dict[str, Any],
    history: History,
) -> Context: ...

class Context:
    def __bool__(self): ...
    def __delattr__(self, name: str): ...
    def __dir__(self) -> List[str]: ...
    def __getattr__(self, name: str) -> Any: ...
    def __repr__(self) -> str: ...
    def __setattr__(self, name: str, value: int): ...
