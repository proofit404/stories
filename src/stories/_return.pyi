from enum import Enum
from typing import Any, Dict, List, Optional, Union

class Failure:
    def __init__(self, reason: Optional[Union[Enum, str]] = ...) -> None: ...
    def __repr__(self) -> str: ...

class Result:
    def __init__(self, value: Optional[Union[List[str], int]] = ...) -> None: ...
    def __repr__(self) -> str: ...

class Skip:
    def __repr__(self) -> str: ...

class Success:
    def __init__(self, **kwargs: Dict[str, Any]) -> None: ...
    def __repr__(self) -> str: ...
