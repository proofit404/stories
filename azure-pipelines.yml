---
trigger:
  - master

jobs:
  - job: 'Test'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      matrix:
        py27:
          python.version: '2.7'
          tox.env: py27
        py34:
          python.version: '3.4'
          tox.env: py34
        py35:
          python.version: '3.5'
          tox.env: py35
        py36:
          python.version: '3.6'
          tox.env: py36
        py37:
          python.version: '3.7'
          tox.env: py37
        precommit:
          python.version: '3.7'
          tox.env: precommit
        flake8:
          python.version: '3.7'
          tox.env: flake8
        mypy:
          python.version: '3.7'
          tox.env: mypy
        black:
          python.version: '3.7'
          tox.env: black
        isort:
          python.version: '3.7'
          tox.env: isort
        mkdocs:
          python.version: '3.7'
          tox.env: mkdocs
        doctest:
          python.version: '3.7'
          tox.env: doctest
        remarklint:
          python.version: '3.7'
          tox.env: remarklint
        yamllint:
          python.version: '3.7'
          tox.env: yamllint
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: $(python.version)
        displayName: Install Python.
      - script: pip install --upgrade tox
        displayName: Install Tox.
      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
        condition: in(variables['tox.env'], 'remarklint')
        displayName: Install NodeJS.
      - script: tox -e $(tox.env)
        displayName: Run Tox.
      - script: |
          if [ ! -f .coverage ]; then
            echo No coverage data found.
            exit 0
          fi
          PATH=$HOME/.local/bin:$PATH
          python$(python.version) -m pip install --user codecov
          codecov
        env:
          CODECOV_TOKEN: $(codecov.token)
        condition: succeeded()
        displayName: Report Coverage.
